using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using MiniJSON;

namespace SuperAwesome{ 

	/**
 	 * This model class contains all information that is received from the server
 	 * when an Ad is requested, as well as some aux fields that will be generated
 	 * by the SDK
 	 */
	public class SAAd {

		/** the SA server can send an error; if that's the case, this field will not be nill */
		public int error;
		
		/** the ID of the placement that the ad was sent for */
		public int placementId;
		
		/** line item */
		public int lineItemId;
		
		/** the ID of the campaign that the ad is a part of */
		public int campaignId;
		
		/** is true when the ad is a test ad */
		public bool isTest;
		
		/**
	     * is true when ad is fallback (fallback ads are sent when there are no
	     * real ads to display for a certain placement)
	     */
		public bool isFallback;
		public bool isFill;
		
		/**
	     * the HTML of the ad - this is generated by the SDK based on the type of ad
	     * that is presented (see SAFormatter.h)
	     */
		public string adHTML;
		
		/** pointer to the creative data associated with the ad */
		public SACreative creative;

		public SAAd() {
			/** do nothing */
		}

		/** aux print function */
		public void print(){
			string printout = " \nAD:\n";
			printout += "error: " + error + "\n";
			printout += "placementId: " + placementId + "\n";
			printout += "lineItemId: " + lineItemId + "\n";
			printout += "campaignId: " + campaignId + "\n";
			printout += "isTest: " + isTest + "\n";
			printout += "isFallback: " + isFallback + "\n";
			printout += "isFill: " + isFill + "\n";
			printout += "adHTML: " + adHTML + "\n";
			Debug.Log(printout);
			creative.print();
		}
	}
}